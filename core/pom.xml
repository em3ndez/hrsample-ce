<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.jspresso.hrsample</groupId>
    <artifactId>hrsample</artifactId>
    <version>3.5.11</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>hrsample-core</artifactId>
  <packaging>jar</packaging>
  <name>Jspresso HR Sample - Core</name>
  <dependencies>
    <dependency>
      <groupId>org.jspresso.framework</groupId>
      <artifactId>jspresso-app-template-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jspresso.framework</groupId>
      <artifactId>jspresso-app-launch-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jspresso.framework</groupId>
      <artifactId>jspresso-tools</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>generate-ddl-scripts</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>hibernate3-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-mysql-schema</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>hbm2ddl</goal>
                </goals>
                <configuration>
                  <components>
                    <component>
                      <name>hbm2ddl</name>
                    </component>
                  </components>
                  <componentProperties>
                    <implementation>configuration</implementation>
                    <drop>false</drop>
                    <export>false</export>
                    <format>true</format>
                    <propertyfile>conf/schema-export-mysql-innodb.properties</propertyfile>
                    <outputfilename>hrsample-schema-mysql-innodb.sql</outputfilename>
                    <scan-classes>true</scan-classes>
                  </componentProperties>
                </configuration>
              </execution>
              <execution>
                <id>generate-postgresql-schema</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>hbm2ddl</goal>
                </goals>
                <configuration>
                  <components>
                    <component>
                      <name>hbm2ddl</name>
                    </component>
                  </components>
                  <componentProperties>
                    <implementation>configuration</implementation>
                    <drop>false</drop>
                    <export>false</export>
                    <format>true</format>
                    <propertyfile>conf/schema-export-postgresql.properties</propertyfile>
                    <outputfilename>hrsample-schema-postgresql.sql</outputfilename>
                    <scan-classes>true</scan-classes>
                  </componentProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-ddl-scripts</id>
                <goals>
                  <goal>single</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <descriptors>
                    <descriptor>${basedir}/src/main/assembly/ddl-scripts.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/dsl</directory>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/jasperreports</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/xdoclet</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/dsl</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-dsl-application</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>${basedir}/src/main/dsl/application.groovy</source>
              <properties>
                <srcDir>${basedir}/src/main/dsl</srcDir>
                <outputDir>${project.build.directory}/generated-resources/dsl</outputDir>
                <modelOutputFileName>dsl-model.xml</modelOutputFileName>
                <viewOutputFileName>dsl-view.xml</viewOutputFileName>
                <frontOutputFileName>dsl-frontend.xml</frontOutputFileName>
                <backOutputFileName>dsl-backend.xml</backOutputFileName>
              </properties>
              <classpath>
                <element>
                  <groupId>org.jspresso.contrib</groupId>
                  <artifactId>jspresso-sjs</artifactId>
                  <version>${sjs.version}</version>
                </element>
              </classpath>
            </configuration>
          </execution>
          <execution>
            <id>compile-groovy-classes</id>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.xdoclet</groupId>
        <artifactId>maven2-xdoclet2-plugin</artifactId>
        <executions>
          <execution>
            <id>xdoclet-hibernate</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>xdoclet</goal>
            </goals>
            <configuration>
              <configs>
                <config>
                  <components>
                    <component>
                      <classname>org.xdoclet.plugin.hibernate.HibernateMappingPlugin</classname>
                      <params>
                        <version>3.0</version>
                        <destdir>${project.build.directory}/generated-resources/xdoclet</destdir>
                        <validate>false</validate>
                      </params>
                    </component>
                  </components>
                  <includes>**/model/**/**.java</includes>
                </config>
              </configs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-entities</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <path id="spring.beans.classpath">
                  <dirset dir="${basedir}">
                    <include name="**/src/main/resources" />
                    <include name="**/target/generated-resources/dsl" />
                  </dirset>
                  <path refid="maven.plugin.classpath" />
                </path>
                <property name="generator.dest" value="${project.build.directory}/generated-sources/entitygenerator" />
                <mkdir dir="${generator.dest}" />
                <java classname="org.jspresso.framework.tools.entitygenerator.EntityGenerator" classpathref="spring.beans.classpath" failonerror="true">
                  <arg value="-beanFactorySelector" />
                  <arg value="org/jspresso/hrsample/beanRefFactory.xml" />
                  <arg value="-applicationContextKey" />
                  <arg value="hrsample-model-context" />
                  <arg value="-templateResourcePath" />
                  <arg value="${generator.templateResourcePath}" />
                  <arg value="-templateName" />
                  <arg value="${generator.templateName}" />
                  <arg value="-outputDir" />
                  <arg value="${generator.dest}" />
                  <arg value="-includePackages" />
                  <arg value="org.jspresso.hrsample.model" />
                </java>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>hibernate-descriptors-fix</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <property name="xdoclet.dest" value="${project.build.directory}/generated-resources/xdoclet" />
                <mkdir dir="${xdoclet.dest}" />
                <replaceregexp byline="true">
                  <regexp pattern="hibernate\.sourceforge\.net" />
                  <substitution expression="www.hibernate.org/dtd" />
                  <fileset dir="${xdoclet.dest}">
                    <include name="**/*.hbm.xml" />
                  </fileset>
                </replaceregexp>
                <replaceregexp byline="true">
                  <regexp pattern="&lt;component name=&quot;(.*)&quot;&gt;$" />
                  <substitution expression="&lt;component name=&quot;\1&quot;&gt;&lt;tuplizer entity-mode=&quot;pojo&quot; class=&quot;org.jspresso.framework.model.persistence.hibernate.entity.tuplizer.ProxyPojoComponentTuplizer&quot; /&gt;" />
                  <fileset dir="${xdoclet.dest}">
                    <include name="**/*.hbm.xml" />
                  </fileset>
                </replaceregexp>
                <replaceregexp byline="true">
                  <regexp pattern="&lt;composite-element class=&quot;(.*)&quot;&gt;$" />
                  <substitution expression="&lt;composite-element class=&quot;\1&quot;&gt;&lt;tuplizer entity-mode=&quot;pojo&quot; class=&quot;org.jspresso.framework.model.persistence.hibernate.entity.tuplizer.ProxyPojoComponentTuplizer&quot; /&gt;" />
                  <fileset dir="${xdoclet.dest}">
                    <include name="**/*.hbm.xml" />
                  </fileset>
                </replaceregexp>
                <replaceregexp byline="false" flags="mg">
                  <regexp pattern="table=&quot;(.*)&quot;&gt;(\r?\n)(.*)&lt;key column=&quot;ID&quot;/&gt;" />
                  <substitution expression="table=&quot;\1&quot;&gt;\2\3&lt;key column=&quot;ID&quot; foreign-key=&quot;\1_SUPER_FK&quot;/&gt;" />
                  <fileset dir="${xdoclet.dest}">
                    <include name="**/*.hbm.xml" />
                  </fileset>
                </replaceregexp>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-generated-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/entitygenerator</source>
                <source>${basedir}/src/main/groovy</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jasperreports-maven-plugin</artifactId>
        <configuration>
           <outputDirectory>${project.build.directory}/generated-resources/jasperreports</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <id>compile-jasper-reports</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>compile-reports</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>